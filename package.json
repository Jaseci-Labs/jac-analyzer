{
    "name": "jaclang-extension",
    "displayName": "%extension.displayName%",
    "description": "%extension.description%",
    "version": "2024.2.29",
    "preview": true,
    "serverInfo": {
        "name": "Jaclang Language Server",
        "module": "jaclang"
    },
    "publisher": "jaseci-labs",
    "license": "MIT",
    "icon": "./assets/icon.png",
    "homepage": "https://www.jac-lang.org/",
    "repository": {
        "type": "git",
        "url": "https://github.com/Jaseci-Labs/jaclang-vscode.git"
    },
    "bugs": {
        "url": "https://github.com/Jaseci-Labs/jaclang-vscode/issues"
    },
    "galleryBanner": {
        "color": "#1e415e",
        "theme": "dark"
    },
    "keywords": [
        "jaseci",
        "jaclang",
        "jac"
    ],
    "engines": {
        "vscode": "^1.75.0"
    },
    "categories": [
        "Programming Languages",
        "Linters",
        "Formatters",
        "Snippets",
        "Data Science",
        "Machine Learning"
    ],
    "extensionDependencies": [
        "ms-python.python"
    ],
    "capabilities": {
        "virtualWorkspaces": {
            "supported": false,
            "description": "Virtual Workspaces are not supported with jaseci."
        }
    },
    "main": "./dist/extension.js",
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool source-map --config ./webpack.config.js",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile",
        "lint": "eslint src --ext ts",
        "format-check": "prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'",
        "tests": "node ./out/test/ts_tests/runTest.js",
        "vsce-package": "mkdir build && vsce package -o build/jaclang-extension.vsix",
        "test": "vscode-test"
    },
    "contributes": {
        "configuration": {
            "properties": {
                "jaclang.importStrategy": {
                    "default": "useBundled",
                    "markdownDescription": "%settings.importStrategy.description%",
                    "enum": [
                        "useBundled",
                        "fromEnvironment"
                    ],
                    "markdownEnumDescriptions": [
                        "%settings.importStrategy.useBundled.description%",
                        "%settings.importStrategy.fromEnvironment.description%"
                    ],
                    "scope": "window",
                    "type": "string"
                },
                "jaclang.interpreter": {
                    "default": [],
                    "markdownDescription": "%settings.interpreter.description%",
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jaclang.reportingScope": {
                    "default": "file",
                    "markdownDescription": "%settings.reportingScope.description%",
                    "enum": [
                        "file",
                        "workspace"
                    ],
                    "markdownEnumDescriptions": [
                        "%settings.reportingScope.file.description%",
                        "%settings.reportingScope.workspace.description%"
                    ],
                    "scope": "resource",
                    "type": "string",
                    "tags": [
                        "experimental"
                    ]
                },
                "jaclang.severity": {
                    "default": {
                        "error": "Error",
                        "note": "Information"
                    },
                    "additionalProperties": {
                        "type": "string",
                        "enum": [
                            "Error",
                            "Hint",
                            "Information",
                            "Warning"
                        ]
                    },
                    "markdownDescription": "%settings.severity.description%",
                    "scope": "resource",
                    "type": "object"
                },
                "jaclang.showNotifications": {
                    "default": "off",
                    "markdownDescription": "%settings.showNotifications.description%",
                    "enum": [
                        "off",
                        "onError",
                        "onWarning",
                        "always"
                    ],
                    "markdownEnumDescriptions": [
                        "%settings.showNotifications.off.description%",
                        "%settings.showNotifications.onError.description%",
                        "%settings.showNotifications.onWarning.description%",
                        "%settings.showNotifications.always.description%"
                    ],
                    "scope": "machine",
                    "type": "string"
                },
                "jaclang.showWarnings": {
                    "default": true,
                    "markdownDescription": "%settings.showWarnings.description%",
                    "scope": "resource",
                    "type": "boolean"
                }
            }
        },
        "languages": [
            {
                "id": "jac",
                "aliases": [
                    "Jaseci Programming Language",
                    "Jac Language",
                    "jac"
                ],
                "extensions": [
                    ".jac"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "light": "./assets/file-icon.svg",
                    "dark": "./assets/file-icon.svg"
                }
            }
        ],
        "grammars": [
            {
                "language": "jac",
                "scopeName": "source.jac",
                "path": "./syntaxes/jac.tmLanguage.json"
            }
        ],
        "commands": [
            {
                "title": "%command.restartServer%",
                "category": "Jaclang",
                "command": "jaclang.restart"
            },
            {
                "title": "Run Jac file",
                "category": "Jaclang",
                "command": "jaclang.run"
            },
            {
                "title": "Run Tests",
                "category": "Jaclang",
                "command": "jaclang.test"
            },
            {
                "title": "Clean Cache",
                "category": "Jaclang",
                "command": "jaclang.clean"
            }
        ]
    },
    "dependencies": {
        "@vscode/python-extension": "^1.0.5",
        "fs-extra": "^11.1.1",
        "vscode-languageclient": "^8.1.0"
    },
    "devDependencies": {
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^9.2.1",
        "@types/chai": "^4.3.6",
        "@types/fs-extra": "^11.0.2",
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/sinon": "^10.0.16",
        "@types/vscode": "^1.74.0",
        "@typescript-eslint/eslint-plugin": "^6.7.0",
        "@typescript-eslint/parser": "^6.7.0",
        "@vscode/test-cli": "^0.0.6",
        "@vscode/test-electron": "^2.3.9",
        "@vscode/vsce": "^2.21.0",
        "chai": "^4.3.8",
        "eslint": "^8.49.0",
        "glob": "^10.3.4",
        "mocha": "^10.2.0",
        "prettier": "^3.0.3",
        "semantic-release": "^22.0.5",
        "sinon": "^16.0.0",
        "ts-loader": "^9.4.4",
        "typemoq": "^2.1.0",
        "typescript": "^5.2.2",
        "webpack": "^5.88.2",
        "webpack-cli": "^5.1.4"
    }
}
